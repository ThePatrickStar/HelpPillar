from matplotlib.pyplot import *
from numpy import *
from scipy.interpolate import *
from util import calibrate_time


MALWARE_FILE = 'malware_date.txt'
OUTPUT_MALWARE_NUM_TIME = 'malware_num_date.txt'


malware_time = []

with open(MALWARE_FILE) as f:
    malware_tuples = f.readlines()

print 'constructing malware_time ...'
for i in malware_tuples:
    try:
        malware_time.append(int(i.split()[1]))
    except IndexError:
        print 'wrong input format at line: ', len(malware_time)+1

print 'malware_time size: ', len(malware_time)
print 'sorting malware_time ...'
malware_time.sort()


count = 0
current_time = 20080800
times = []
counts = []
for mal in malware_time:
    if mal > 20151231:
        break
    elif mal < 20080800:
        continue
    else:
        if mal <= calibrate_time(current_time + 100):
            count += 1
        if mal > calibrate_time(current_time + 100):
            counts.append(count)
            count = 1
            current_time = calibrate_time(current_time + 100)

print 'writing the output_malware_time file ...'
output_file = open(OUTPUT_MALWARE_NUM_TIME, 'w+')

for idx, count in enumerate(counts):
    times.append(idx+1)
    line = str(count) + '\n'
    output_file.write(line)

output_file.close()

x = array(times)
y = array(counts)

poly_reg = polyfit(x, y, 10)
print 'coefficients of the regression output: ', poly_reg

x_ticks = []
for i in times:
    # print i*100 + 20080800
    x_ticks.append(int(calibrate_time(i*100 + 20080800)/100))

plot(x, y, 'o')
plot(x, polyval(poly_reg, x))
xticks(range(0, len(x_ticks)), x_ticks, rotation=45)
locator_params(axis='x', nbins=10)

print times
print x_ticks

savefig('poly_reg_malware_num_month.png')


